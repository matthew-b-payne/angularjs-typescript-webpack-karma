{
    "sourceFile": "app/epay/epay-message-resolver.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1646419640015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1646419844184,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,9 @@\n       },\n     }\n     static $inject: any = ['authService', 'CONSTANTS']\n   \n-    constructor(private authService, private CONSTANTS) {\n+    constructor(public authService, private CONSTANTS) {\n       this.isHo = this.authService.isHomeOfficeUser()\n       this.isClientView = this.authService.isClientView() || this.authService.isARealClient()\n           // authService.isClientView()) || authService.isARealClient()\n       // console.info('is clientView', this.authService.isARealClient(), this.authService.isClientView(), this.authService.isHomeOfficeUser())\n"
                }
            ],
            "date": 1646419640015,
            "name": "Commit-0",
            "content": "export class EpayMessageResolver {\n\n    isHo: boolean = false\n    isClientView: boolean = false\n  \n    // references for messages http://pmlwiki/pages/viewpage.action?spaceKey=PMLLEV&title=UI+Messages+When+User+Can%27t+Pay+Premium%2C+Loan%2C+or+PUA\n    premiumMessages = [{\n      typeCode: 1,\n      HOText: 'There is a pending payment',\n    },\n    // {\n    //   typeCode: 3,\n    //   CPText: 'Premium are being paid through the Penn Check automatic debit program.',\n    //   FPText: 'Premium are being paid through the Penn Check automatic debit program.',\n    //   HOText: 'Premium are being paid through the Penn Check automatic debit program.',\n    // },\n    {\n      typeCode: 4,\n      HOText: 'Billing is suspended. (This message is only visible to Home Office staff.)',\n    },\n    {\n      typeCode: 7,\n      CPText: 'Premiums are being paid through a salary allotment program',\n      FPText: 'Premiums are being paid through a salary allotment program',\n      HOText: 'Premiums are being paid through a salary allotment program',\n    },\n    // {\n    //   typeCode: 8,\n    //   CPText: 'The scheduled premium will be deducted from the Premium Deposit Fund.',\n    //   FPText: 'The scheduled premium will be deducted from the Premium Deposit Fund.',\n    //   HOText: 'The scheduled premium will be deducted from the Premium Deposit Fund.',\n    // },\n    {\n      typeCode: 9,\n      CPText: 'Premiums are being paid through the Automated Premium Offset program.',\n      FPText: 'Premiums are being paid through the Automated Premium Offset program.',\n      HOText: 'Premiums are being paid through the Automated Premium Offset program.',\n    },\n    {\n      typeCode: 10,\n      CPText: 'Premiums are being waived under the Disability Waiver of Premium Agreement',\n      FPText: 'Premiums are being waived under the Disability Waiver of Premium Agreement',\n      HOText: 'Premiums are being waived under the Disability Waiver of Premium Agreement',\n    },\n    {\n      typeCode: 12,\n      HOText: 'Bill is intercepted. (This message is only visible to Home Office staff.)',\n    },\n    {\n      typeCode: 28,\n      HOText: 'Note: There is a discrepancy between policy and bill. (This message is only visible to Home Office staff.)\"',\n    },\n    {\n      typeCode: 999,\n      HOText: 'Note: There was an error processing this request. (This message is only visible to Home Office staff.)',\n    },\n    {\n      typeCode: 1012300002,\n      CPText: 'Your card was declined.  Please use a different card or contact your Financial Institution.',\n      HOText: 'Only client can make a card payment',\n      FPText: 'Only client can make a card payment',\n    },\n    {\n      typeCode: 1012300001,\n      CPText: 'Your card was declined.  Please use a different card or contact your Financial Institution.',\n      HOText: 'Only client can make a card payment',\n      FPText: 'Only client can make a card payment',\n    },\n    {\n      typeCode: 1012300003,\n      CPText: 'Your card was declined.  Please use a different card or contact your Financial Institution.',\n      HOText: 'Only client can make a card payment',\n      FPText: 'Only client can make a card payment',\n    },\n    ]\n  \n    loanMesssages = [{\n      typeCode: 1,\n      CPText: 'There is a pending loan payment.',\n      HOText: 'There is a pending loan payment.',\n      FPText: 'There is a pending loan payment.',\n    }]\n  \n    puaMessages = [{\n      typeCode: 1,\n      CPText: 'There is a pending Paid-Up Additions payment.',\n      HOText: 'There is a pending Paid-Up Additions payment.',\n      FPText: 'There is a pending Paid-Up Additions payment.',\n    },\n    {\n      typeCode: 18,\n      HOText: 'Paid-Up Additions yearly contribution limit has been hit.',\n      FPText: 'Paid-Up Additions yearly contribution limit has been hit. (Client does not see this message.)',\n    },\n  \n    ]\n  \n    ROLE_HASH_KEYS = {\n      CP_USER: '10',\n      HO_USER: '01',\n      FP_USER: '00',\n    }\n    epayErrorMessages = {}\n    epayDefaultErrorMessage = {}\n  \n    PHONE_NUMBER = {\n      [this.ROLE_HASH_KEYS.CP_USER]: {\n        NY: '855-446-7393',\n        NON_NY: '800-523-0650',\n      },\n      [this.ROLE_HASH_KEYS.HO_USER]: {\n        NY: '855-446-7393',\n        NON_NY: '800-523-0650',\n      },\n      [this.ROLE_HASH_KEYS.FP_USER]: {\n        NY: '855-446-7393',\n        NON_NY: '800-523-0650',\n      },\n    }\n    static $inject: any = ['authService', 'CONSTANTS']\n  \n    constructor(private authService, private CONSTANTS) {\n      this.isHo = this.authService.isHomeOfficeUser()\n      this.isClientView = this.authService.isClientView() || this.authService.isARealClient()\n          // authService.isClientView()) || authService.isARealClient()\n      // console.info('is clientView', this.authService.isARealClient(), this.authService.isClientView(), this.authService.isHomeOfficeUser())\n  \n      this._initEpayErrorMessages()\n    }\n  \n    _initEpayErrorMessages() {\n      const epayErrorKeys = this.CONSTANTS.epayErrors // should probably get out of js kitchen sink and keep in typescript\n  \n      this.epayDefaultErrorMessage = 'Online payment is currently unavailable, please do not make another payment attempt. Contact your Financial Professional or Penn Mutual Client Services for more information. (D)'\n      this.epayErrorMessages = {\n        [epayErrorKeys.ROUTING_NUMBER]: {\n          [this.ROLE_HASH_KEYS.CP_USER]: 'An invalid Bank Routing Number was used. Please try again with a valid Bank Routing Number. (R038)',\n          [this.ROLE_HASH_KEYS.HO_USER]: '',\n          [this.ROLE_HASH_KEYS.FP_USER]: '',\n        },\n        [epayErrorKeys.ROUTING_NUMBER_THOMPSON]: {\n          [this.ROLE_HASH_KEYS.CP_USER]: 'An invalid Bank Routing Number was used. Please try again with a valid Bank Routing Number. (R039)',\n          [this.ROLE_HASH_KEYS.HO_USER]: '',\n          [this.ROLE_HASH_KEYS.FP_USER]: '',\n        },\n        [epayErrorKeys.ACCOUNT_INVALID]: {\n          [this.ROLE_HASH_KEYS.CP_USER]: 'An invalid Bank Account Number was used. Please try again with a valid Bank Account Number. (R070)',\n          [this.ROLE_HASH_KEYS.HO_USER]: '',\n          [this.ROLE_HASH_KEYS.FP_USER]: '',\n        },\n        [epayErrorKeys.ACCOUNT_INCOMPLETE]: {\n          [this.ROLE_HASH_KEYS.CP_USER]: 'An invalid Bank Account Number was used. Please use a valid Bank Account Number. (R383)',\n          [this.ROLE_HASH_KEYS.HO_USER]: '',\n          [this.ROLE_HASH_KEYS.FP_USER]: '',\n        },\n        [epayErrorKeys.PAYMENT_RANGE]: {\n          [this.ROLE_HASH_KEYS.CP_USER]: 'The payment amount was outside of allowed range. (R362)',\n          [this.ROLE_HASH_KEYS.HO_USER]: '',\n          [this.ROLE_HASH_KEYS.FP_USER]: '',\n        },\n        [epayErrorKeys.PAYMENT_DATE]: {\n          [this.ROLE_HASH_KEYS.CP_USER]: 'Online payment is currently unavailable. Please contact your financial professional or Penn Mutual Client Services. (R363)',\n          [this.ROLE_HASH_KEYS.HO_USER]: '',\n          [this.ROLE_HASH_KEYS.FP_USER]: '',\n        },\n        [epayErrorKeys.INVALID_CREDENTIALS]: {\n          [this.ROLE_HASH_KEYS.CP_USER]: 'Online payment is currently unavailable. Please contact your financial professional or Penn Mutual Client Services. (R378)',\n          [this.ROLE_HASH_KEYS.HO_USER]: '',\n          [this.ROLE_HASH_KEYS.FP_USER]: '',\n        },\n        [epayErrorKeys.PROCESSING_DOWN]: {\n          [this.ROLE_HASH_KEYS.CP_USER]: 'Online payment is currently unavailable due to system maintenance. Please try again in a few hours. (R999)',\n          [this.ROLE_HASH_KEYS.HO_USER]: '',\n          [this.ROLE_HASH_KEYS.FP_USER]: '',\n        },\n        [epayErrorKeys.SERVER_500_ERROR]: {\n          [this.ROLE_HASH_KEYS.CP_USER]: 'Online payment is currently unavailable, please do not make another payment attempt. Contact your financial professional or Penn Mutual Client Services for more information. (H500)',\n          [this.ROLE_HASH_KEYS.HO_USER]: '',\n          [this.ROLE_HASH_KEYS.FP_USER]: '',\n        },\n        [epayErrorKeys.NICKNAME_TOO_LONG]: {\n          [this.ROLE_HASH_KEYS.CP_USER]: 'The account nickname should be no longer than 20 characters. Please try again using a shorter nickname. (AN20)',\n          [this.ROLE_HASH_KEYS.HO_USER]: '',\n          [this.ROLE_HASH_KEYS.FP_USER]: '',\n        },\n        [epayErrorKeys.GUIDELINE_PREMIUM]: {\n          [this.ROLE_HASH_KEYS.CP_USER]: 'We cannot process your payment at this time. Please contact your Financial Professional, or call PHONE_NUMBER for additional information.',\n          [this.ROLE_HASH_KEYS.HO_USER]: 'Payment failed. Payment amount is over Guideline Premium.',\n          [this.ROLE_HASH_KEYS.FP_USER]: ' ', // Single space is intentional, empty string would trigger default message.\n        },\n        ['1012300002']: {\n          [this.ROLE_HASH_KEYS.CP_USER]: 'Your card was declined.  Please use a different card or contact your Financial Institution.',\n          [this.ROLE_HASH_KEYS.HO_USER]: 'Only client can make a card payment',\n          [this.ROLE_HASH_KEYS.FP_USER]: 'Only client can make a card payment',\n        },\n        ['1012300001']: {\n          [this.ROLE_HASH_KEYS.CP_USER]: 'Your card was declined.  Please use a different card or contact your Financial Institution.',\n          [this.ROLE_HASH_KEYS.HO_USER]: 'Only client can make a card payment',\n          [this.ROLE_HASH_KEYS.FP_USER]: 'Only client can make a card payment',\n        },\n        ['1012300003']: {\n          [this.ROLE_HASH_KEYS.CP_USER]: 'Your card was declined.  Please use a different card or contact your Financial Institution.',\n          [this.ROLE_HASH_KEYS.HO_USER]: 'Only client can make a card payment',\n          [this.ROLE_HASH_KEYS.FP_USER]: 'Only client can make a card payment',\n        },\n      }\n    }\n  \n    resolveEpayErrorMessage(code, isClient, isHo, jurisdiction) {\n      const roleHashKey = String(+isClient) + String(+isHo)\n      const foundErrorMessage = this.epayErrorMessages[code]\n      const roleMessage = foundErrorMessage?.[roleHashKey] || foundErrorMessage?.[this.ROLE_HASH_KEYS.CP_USER]\n      const messageTemplate = !roleMessage ? this.epayDefaultErrorMessage : roleMessage\n      const phoneNumberJurisdiction = jurisdiction === 'New York' ? 'NY' : 'NON_NY'\n      const phoneNumber = this.PHONE_NUMBER[roleHashKey][phoneNumberJurisdiction]\n      const finalResult = messageTemplate.replace('PHONE_NUMBER', phoneNumber)\n  \n      // console.log('roleHashKey', roleHashKey, phoneNumberJurisdiction, phoneNumber)\n      // console.log('>>>>', foundErrorMessage, finalResult)\n      return finalResult\n    }\n  \n    resolvePremiumMessage(typeCodeString: string) {\n      const typeCode = Number(typeCodeString)\n      const msg = this.premiumMessages.find(element => element.typeCode === typeCode)\n  \n      return this._pickRoleMessage(msg)\n  \n    }\n  \n    resolvePuaMessage(typeCodeString: string) {\n      const typeCode = Number(typeCodeString)\n      const msg = this.puaMessages.find(element => element.typeCode === typeCode)\n  \n      return this._pickRoleMessage(msg)\n    }\n  \n    resolveLoanMessage(typeCodeString: string) {\n      const typeCode = Number(typeCodeString)\n      const msg = this.loanMesssages.find(element => element.typeCode === typeCode)\n  \n      return this._pickRoleMessage(msg)\n    }\n  \n    _pickRoleMessage(msg) {\n      if (this.isClientView) {\n        return msg?.CPText\n      }\n  \n      if (this.isHo) {\n        return msg?.HOText\n      }\n  \n      return msg?.FPText\n    }\n  \n  }\n  "
        }
    ]
}